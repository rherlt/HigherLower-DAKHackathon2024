buildscript {
	dependencies {
		classpath "org.openapitools:openapi-generator-gradle-plugin:7.5.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.openapi.generator' version '7.5.0'
}

apply plugin: 'org.openapi.generator'

group = 'de.higherlower.adipositas'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	set('springAiVersion', "0.8.1")
}

sourceSets.main.java.srcDirs = ['build/generated/sources/src/main/java','src/main/java']

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/open-api/openapi.yaml")
	outputDir.set("$rootDir/build/generated/sources")
	configFile.set("$rootDir/src/main/resources/open-api/configJavaServer.json")
}

afterEvaluate {
	tasks.compileJava.dependsOn(tasks.openApiGenerate)
}